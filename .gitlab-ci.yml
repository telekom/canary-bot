variables:
  NO_PROXY: "$NO_PROXY,*.telekom.de"
  IMAGE_NAME: canary-bot
  IMAGE_REPOSITORY: $DOCKER_REGISTRY/caas/$IMAGE_NAME

  BINARY_NAME: "cbot"
  BINARY_PATH: "build/"
  BINARY: "${BINARY_PATH}${BINARY_NAME}"
  PACKAGE_REGISTRY_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/${BINARY_NAME}/${CI_COMMIT_TAG}"

stages:
  - test
  - build
  - scan
  - push
  - release

include:
  - project: caas/cicd_templates
    file: ci_general.yml

binary_build:
  stage: build
  image: dockerhub.devops.telekom.de/golang:1.18
  script:
    - go mod download
    - CGO_ENABLED=0 go build -ldflags "-s -w" -o ${BINARY} .
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - ${BINARY_PATH}
  rules:
    - changes:
        - "**/*.go"
        - "**/go.mod"
        - "Dockerfile"

upload_binary:
  stage: push
  image: dockerhub.devops.telekom.de/curlimages/curl:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      curl --header "JOB-TOKEN: ${CI_JOB_TOKEN}" --upload-file ${BINARY} "${PACKAGE_REGISTRY_URL}/${BINARY_NAME}"
  cache:
    key: $CI_COMMIT_REF_SLUG
    paths:
      - ${BINARY_PATH}

release_job:
  stage: release
  image: registry.gitlab.com/gitlab-org/release-cli:latest
  rules:
    - if: $CI_COMMIT_TAG
  script:
    - |
      release-cli create --name "Release $CI_COMMIT_TAG" --tag-name $CI_COMMIT_TAG \
        --assets-link "{\"name\":\"${BINARY_NAME} binary\",\"url\":\"${PACKAGE_REGISTRY_URL}/${BINARY_NAME}\",\"link_type\":\"package\"}" \
        --assets-link "{\"name\":\"${BINARY_NAME} image\",\"url\":\"https://${IMAGE_REPOSITORY}:${CI_COMMIT_TAG}\",\"link_type\":\"image\"}"
